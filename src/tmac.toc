. \" Table of Contents generation
. \" vim: ft=groff
.
.   \" Initialization, run once at the start
.de toc.init
.nr CH 0 1
.tm toc_begin
.tm .fl
.tm .ev _toc
.tm .if \\\\n(DT=1 .sp 4
.tm .if \\\\n(DT=2 .nr NT 1
.tm .if \\\\n(DT=2 .bp
.tm .if \\\\n(DT=3 .nr NT 1
.tm .if \\\\n(DT=3 .bp
.tm .ft 1
.tm .ad l
.tm .ps \\\\n(PS+6
.tm .vs \\\\n(.s+2
.tm .post.name toc
.tm TABLE OF CONTENTS
.tm .sp -0.7
.tm \\\\l'\\n(.lu-\\n(.iu_'
.tm .br
.tm .ev
.tm toc_end
..
.   \" Append a new chapter
.de toc.chapter
.tm toc_begin
.tm .ev _toc
.tm .sp 1
.tm .ft 3
.tm .ps \\\\n(PS+4
.tm .vs \\\\n(.s+2
.tm .ta .4i
.tm .ds _s \\$2\\\\t\\$3\\\\h'\\n(.lu-\\n(.iu-\\\\w'\\\\t\\$3'u-\\\\w'\\$4'u'\\$4
.tm .nr _w \\\\w'\\\\*(_s'
.tm .nr _h 1v+20
.tm \\\\v'20u'\\\\X'link "\\$1" \\\\n(_w -\\\\n(_h'\\\\v'-20u'
.tm \\\\*(_s
.tm .rm _s
.tm .sp 1
.tm .ev
.tm toc_end
..
.   \" Append a new section
.de toc.section
.tm toc_begin
.tm .ev _toc
.tm .ft 1
.tm .ps \\\\n(PS+2
.tm .vs \\\\n(.s+2
.tm .ta .4i
.tm .ds _s \\$2\\\\l'\\n(.lu-\\n(.iu-\\\\w'\\\\t\\$2'u-\\\\w'\\$3'u.'\\$3
.tm .nr _w \\\\w'\\\\*(_s'
.tm .nr _h 1v+10
.tm \\\\h'.4i'\\\\v'20u'\\\\X'link "\\$1" \\\\n(_w -\\\\n(_h'\\\\v'-20u'\\\\h'-.4i'
.tm \\\\&\\t\\\\*(_s
.tm .rm _s
.tm .br
.tm .sp .1
.tm .ev
.tm toc_end
..
.   \" Print Table of Contents.
.   \" This "macro" doesn't actually do anything.
.   \" ToC is generated in such a way that all output
.   \" must be captured from stderr, and then an external
.   \" script searches through the original source file
.   \" and substitutes a line ".TOC" with the output
.   \" from stderr. That way, you can insert ToC anywhere
.   \" in the document, and don't have to wait until the
.   \" end like with diversions. The downside is, the
.   \" document needs several pass-throughs to compile.
.de TOC
..
